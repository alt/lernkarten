% \iffalse
%% File: lernkarten.dtx by Arno Trautmann, mail: arno dot trautmann at gmx dot de
%<*driver>
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
\input docstrip.tex
\askforoverwritefalse
\preamble

EXPERIMENTAL CODE

Do not distribute this file without also distributing the
source files specified above.

Do not distribute a modified version of this file under the same name.

\endpreamble
\postamble
\endpostamble
\keepsilent
\generate{\file{lernkarten.cls}{\from{lernkarten.dtx}{class}}}

\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
\ProvidesFile{lernkarten.cls}
  [24.07.2009 v0.b typeset your lerning cards]
\documentclass{gmdocc}
\usepackage{
  hyperref,
  polyglossia
}
\usepackage[draft,index,marginclue]{fixme}
\hypersetup{
  pdfborder= 0 0 0,
  colorlinks=true,
  linkcolor=blue
}
\setmainlanguage{english}
\setmainfont{TeX Gyre Pagella}

\title{|lernkarten|}
\author{Arno Trautmann\\ \href{mailto:arno.trautmann@gmx.de}{arno.trautmann@gmx.de}}
\def\marginpartt{\scriptsize\ttfamily}

\begin{document}
\maketitle
\begin{abstract}
This is the documentation of the class |lernkarten|. I am writing this class to have an easy way to typeset my cards for learning for exams, especially diploma-exams. As I always loose and forget things, I wanted to have all important stuff on my computer so I will not forget it. – Just print and learn \raisebox{1.5ex}{\rotatebox{-90}{:-)}}

If you have any suggestions or comments, just drop me a mail, I’ll be happy to get any response!
\end{abstract}
\tableofcontents
\section{Usage}
\subsection{Language}
So far, the whole user interface is english. Support for german is being implemented. Use |german| as class-option to active it.
\subsection{Class Options}
The usage of this cass is quite easy. Just load it with
\begin{verbatim}
\documentclass{lernkarten}
\end{verbatim}
Class options are: (english/german, if available)
\begin{description}
\let\olditem\item
\def\item[#1]{\olditem[\color{blue}#1]}
\item[number/anzahl] The number of cards per page. This directly affects the size of each card. You must take care that none of your cards does exceed the given size! Else there will be huge damage and the sun will explode!

A reasonable number, and therefore preset, is 10.
\item[noheader] If you use sections and/or parts to structure your cards, they will be in the header. |noheader| will turn this off.
\item[sectionsoncards] Prints the section on every card. So you always know what theme this cards belongs to. Default is off. Take care that it is \emph{sections\textbf{on}cards}, but not \emph{sections\-cards}.
\item[enumerate/nummerieren] By default, all cards are enumerated. |enumerate=false| turns enumeration off. With |enumerate=section|, the cards will be enumerated section-wise.
\end{description}
\subsection{Typesetting Cards}
There are approximately three ways to typeset a card: Write
\begin{verbatim}
\card[ion optics]{How many electrodes are needed for a single lens}{3}
\end{verbatim}
for a short question–answer-pair. For longer sentences or formulae, write:
% Well, the following is quite dirty … I want to have the mark in the empty line, but nowhere else. So I’m using a unicode-spatium
\begin{verbatim*}
\question
question text …
\answer
3
  
\end{verbatim*}
It is extremely important that you leave an \emph{empty line} after the answer, as this empty line is part of the command!

For the lazy guys:
\begin{verbatim*}
\shortquestion
questiontext

answertext

\end{verbatim*}
Again, the empty lines \emph{must} be given! Else your document will most probably not compile! The |questiontext| or |answertext| can be anything that has no empty lines. For such, use |\card| or |\question|.
\subsection{Structurising}
You can structure your document using the normal commands |\section| and |\part|. Depending on class options, the regarding part and section will be printed on the top of the pages and/or on the cards itself.
\subsection{Open Questions}
Whenever anything is not clear when writing the cards, you can put an |\openquestion{}| at that position. At the end of the document, there will be a table of open questions (|tooq|) where the arguments of |\openquestion{}| are listet whith pagenumbers and links to the cards. |\oq{}| and german |\unklar{}| are aliases for |\openquestion{}|.

If there is an open question, a small {\color{blue}\raisebox{2ex}{\bfseries\rotatebox{-90}{\small :-(}}} (|\frownie|) will be set. If you want to change that symbol or want none at all, say |\openquestionmark{your mark}|.
\section{Implementation}
\DocInput{lernkarten.dtx}
\end{document}
%</driver>
%
%<*class>
% \fi
% We begin with loading of options and setting of constants that are needed even before defining the keys:
% \begin{macrocode}
\def\cards@per@page{10}
\def\cards@enumerate@value{}

\newif\ifcards@header
\newif\ifcards@sections
\newif\ifcards@sectioncards
\newif\ifcards@enumerate
\newif\ifcards@enumerate@section
\cards@headertrue
\cards@sectioncardsfalse
\cards@enumeratetrue
\cards@enumerate@sectionfalse

\RequirePackage{xkeyval}
\DeclareOptionX{anzahl}{\def\cards@per@page{#1}}
\DeclareOptionX{number}{\def\cards@per@page{#1}}
\DeclareOptionX{noheader}{\cards@headerfalse}
\DeclareOptionX{nummerieren}{\def\cards@enumerate@value{#1}}
\DeclareOptionX{enumerate}{\def\cards@enumerate@value{#1}}
\DeclareOptionX{sectionsoncards}{\cards@sectioncardstrue}
\DeclareOptionX{german}{\def\cards@language{german}}
\DeclareOptionX{language}{\def\cards@language{#1}}
\ProcessOptionsX
% \end{macrocode}
% Now loading of the class and usefull packages. |amsmath| is surely needed for any mathematic typesetting, |boxedminipage| is needed for the cards, etc. Then setup of the hyperlinks and page layout.
% \begin{macrocode}
\LoadClass[fleqn]{scrartcl}
\RequirePackage{
  amsmath,
  boxedminipage,
  calc,
  geometry,
  hyperref,
  ifthen,
  polyglossia,
  scrpage2,
  xltxtra
}
\hypersetup{%
  pdfborder=false,%
  colorlinks=true,%
  linkcolor=blue%
}
\geometry{
  bindingoffset=0cm,
  margin=1cm,
  headsep=0.2cm
}
\setlength{\parindent}{0em}
% \end{macrocode}
% Language specific settings. Only german and english are available so far! (So a simple |\ifthenelse| does the job.)
% \begin{macrocode}
\setmainlanguage{\cards@language}
\ifthenelse{\equal{\languagename}{german}}{
  \def\cards@answertext{Antwort}
  \def\cards@openquestiontext{Liste offener Fragen}
}{
  \def\cards@answertext{answer}
  \def\cards@openquestiontext{List of Open Questions}
}
% \end{macrocode}
% Now, the pagelayout. |scrheadings| is used and |part:section| is written on top of every site. If option |noheader| is given, there will be no header. This might be useful for printing, while headers are useful for view on screen.
% \begin{macrocode}
\def\cards@part{}
\def\cards@sect{}

\pagestyle{scrheadings}
\setkomafont{pagehead}{\normalfont\bfseries}
\cfoot{}
\ifcards@header
  \chead{\cards@part\cards@sect}
\else
\fi
% \end{macrocode}
% The definition of the sections is a bit tricky. For the table of contents, we need a valid |\section*| command, so we save it by the |\@ifstar| construct. The rest is for setting the sections as wishey by the user: resetting the counters, writing the section on the cards and/or in the headings. Definition of |\part| is way more straight-forward. |\subsection| and |\subsubsection| have no effect at the moment, but can be used.
% \begin{macrocode}
\let\oldsection\section
\renewcommand\section{\@ifstar{\oldsection*}{\cards@section}}
%
\newcommand\cards@section[1]{
  \ifnum \thequestion@page > 1  %% needed here for conistent page numbering
    \set@answers
  \fi
  \def\cards@sect{#1}
  \ifcards@enumerate@section
    \setcounter{total@question}{0}
    \setcounter{total@answer}{0}
  \fi
  \refstepcounter{section}%
  \addcontentsline{toc}{section}{%
      \protect\numberline{\thesection}#1}%
}
\renewcommand\part[1]{
  \ifnum \thequestion@page > 1
    \set@answers
  \fi
  \def\cards@sect{#1}
  \def\cards@part{#1:~}
  \refstepcounter{part}%
  \addcontentsline{toc}{part}{%
  \protect\numberline{#1}}%
}
\renewcommand\subsection[1]{}
\renewcommand\subsubsection[1]{}
% \end{macrocode}
% Need |\TeXXeTstate=1| for the right-to-left typesetting of the answers
% \begin{macrocode}
\TeXXeTstate=1
% \end{macrocode}
% For evalutation of the enumeration we need some booleans. First one: enumeration at all, second one: section-wise enumeration.
% \begin{macrocode}
\ifthenelse{\equal{\cards@enumerate@value}{false}}{\cards@enumeratefalse}{}
\ifthenelse{\equal{\cards@enumerate@value}{section}}{\cards@enumerate@sectiontrue}{}
% \end{macrocode}
% The calculation of the height of the cards is straight-forward: Textheight divided by the number of cards. Unfortunately, this does \emph{not} work as expected! There is a correction factor needed – even at user level :(
% See page \pageref{bugs}.
%
% \begin{macrocode}
\def\cards@height@correct@factor{\real{1.5}}  %% FIXME why is this factor needed to fill the page?
\def\setcorrectionfactor#1{\def\cards@height@correct@factor{\real{#1}}}
\def\height@of@boxes{\textheight/\cards@per@page\expandafter*\cards@height@correct@factor}
\newcommand\lernkarte[1]{%
  \boxedminipage{.5\textwidth}\textbf{#1}\\[2ex]%
  \minipage[t]{\textwidth}%
}
\def\endlernkarte{
  \endminipage\vphantom{\rule[-\height@of@boxes]{0pt}{\height@of@boxes}}
  \endboxedminipage\kern-1em
}
% \end{macrocode}
% Now set some counters. They will be used to number the cards. So you might sort your cards and you can see how far you come on one day … or you can exchange with your partners (”Having trouble on question 1357 – can you explain that equation?“)
% \begin{macrocode}
\newcounter{total@question}           %% total number of questions
\setcounter{total@question}{0}
\newcounter{total@answer}           %% total number of answers
\setcounter{total@answer}{0}
\newcounter{question@page}     %% the n-th question on one page
\setcounter{question@page}{1}
\newcounter{answer@page}             %% the n-th answer@page on one page
\def\card#1#2#3{ % {Title}{question}{answer}
% typesetting the question: use the environment lernkarte for the layout
  \begin{lernkarte}{%
    \stepcounter{total@question}%
    \ifcards@sectioncards
      \cards@sect~%
    \fi
    \ifcards@enumerate%
      \thetotal@question: %
    \fi%
    #1%
  }
  #2
  \end{lernkarte}
  \expandafter\def\csname answer@\thequestion@page \endcsname{#3}
  \stepcounter{question@page}
% typeset the answers when the page is full of questions.
  \ifnum\thequestion@page > \cards@per@page
    \set@answers
  \fi\unskip
}
% \end{macrocode}
% Now we try a nicer way to typeset the answers:
% \begin{macrocode}
\def\set@answers{
  \clearpage
  \setcounter{answer@page}{1}
% and typeset them L to R, so every answer is on the back of the correct question
  \beginR\unskip
% we loop through all saved answers
  \whiledo{\theanswer@page < \thequestion@page}{%
    \begin{lernkarte}{\cards@answertext: \stepcounter{total@answer}\thetotal@answer}
      \csname answer@\theanswer@page\endcsname
    \end{lernkarte}
    \stepcounter{answer@page}
  }\kern2em %%% FIXME why is this kern needed here?
  \newpage%
  \setcounter{question@page}{1}%
  \setcounter{answer@page}{0}%
}
% \end{macrocode}
% Now the definition and setting of the \emph{table of open questions} (tooq):
% \begin{macrocode}
\addtotoclist[tooq] {tooq}
\newcommand{\listoftooqname}{\cards@openquestiontext}
\newcounter{openquestion}
\def\frownie{\color{blue}\raisebox{2ex}{\bfseries\rotatebox{-90}{\small :-(}}}
\def\cards@mark@oq{\frownie}
\def\openquestion#1{
  \refstepcounter{openquestion}%
  \newcommand*{\l@tooq}{\l@figure}%
  \addcontentsline{tooq}{figure}{%
  \protect\numberline{\textbf{\theopenquestion}}\textbf{#1}}%
  \cards@mark@oq
}
% \end{macrocode}
% typeset the missing answers and the table of open questions.
% \begin{macrocode}
\AtEndDocument{
  \part{\cards@openquestiontext}
  \listoftoc{tooq}
}
\author{no author given}
\title{no title given}
\date{}
\AtBeginDocument{
  \maketitle
  \newpage
  \tableofcontents
  \newpage
}
% \end{macrocode}
% And finally the user-interface. German names and shorthands for above |\def|d functions:
% \begin{macrocode}
\newcommand\karte[3][]{\card{#1}{#2}{#3}}
\long\def\question#1\answer#2\par{\karte{#1}{#2}}
\long\def\frage#1\antwort#2\par{\karte{#1}{#2}}
\def\shortquestion#1\par#2\par{\frage #1 \antwort #2 \par}
\let\unklar\openquestion
\let\oq\openquestion
\def\openquestionmark#1{\def\cards@mark@oq{#1}}
% \end{macrocode}
% </class>
% \section{Known Bugs}\label{bugs}
% There are several bugs, some only regarding the code, some heavily destroying the layout:
% \begin{description}
% \item[references] The references are broken! This is surely \emph{not} section 626!
% \item[display formula] Under certain circumstances (which are not clear to me), there will be a problem if you write only one display formula as answer. This can enlarge the regarding card, which destroys the whole layout Just \emph{add} an empty line or whatever – this will in fact \emph{decrease} the size of the answer-card to the correct size.
% \item[tabular] The same things for tabulars. But so far I have no idea how to fix this.
% \item[size of cards] With the default implementation, 10 cards fill one page. If you use another number of cards, you maybe have to correct the size, as the calculation of the height does something strange. Use the command |\setcorrectionfactor{1.3}| to get the height that fits. Default is |\setcorrectionfactor{1.5}| for 10 cards.
% \end{description}
% \section{To Dos}
% Some things that should be implemented but aren’t so far or are very poor at the moment:
% \begin{description}
% \item |\section| should have an optional argument for short titles.
% \end{description}
% \Finale
% \endinput